# Generated by Django 2.2.17 on 2022-07-12 06:40

from django.db import migrations, models
import django.db.models.deletion

class Migration(migrations.Migration):

    dependencies = [
        ('stations', '0007_auto_20220518_2119'),
    ]

    operations = [
        migrations.AlterField(
            model_name='sensor',
            name='address',
            field=models.PositiveIntegerField(default=72, help_text='I2C address (decimal)'),
        ),
        migrations.AlterField(
            model_name='stationmetadata',
            name='network',
            field=models.CharField(default='fixed', help_text='station network ( mobile for station with mobile coordinate)', max_length=50),
        ),
        migrations.CreateModel(
            name='TransportCan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False, help_text='Activate this transport for measurements', verbose_name='Active')),
                ('cansampletime', models.PositiveIntegerField(default=5, help_text='interval in seconds for publish')),
                ('node_id', models.PositiveIntegerField(default=100, help_text='Cyphal node_id')),
                ('subject', models.CharField(default='', help_text='Cyphal subject', max_length=100, null=True)),
                ('subject_id', models.PositiveIntegerField(default=100, help_text='Cyphal subject-ID (decimal)')),
                ('board', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='stations.Board')),
            ],
            options={
                'verbose_name': 'CAN transport',
                'verbose_name_plural': 'CAN transport',
                'ordering': ['node_id'],
            },
        ),
        migrations.AlterField(
            model_name='sensor',
            name='driver',
            field=models.CharField(choices=[('CAN', 'INDIRECT Cyphal over CAN-BUS'), ('I2C', 'I2C drivers'), ('RF24', 'RF24 Network jsonrpc'), ('SERI', 'SERIAL drivers over serial port'), ('JRPC', 'INDIRECT jsonrpc over some transport')], default='I2C', help_text='Driver to use', max_length=4),
        ),
    ]
