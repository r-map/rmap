# Generated by Django 2.2.17 on 2023-02-22 14:01

from django.db import migrations, models
from django.core import serializers

import os
fixture_dir = os.path.abspath(os.path.join(os.path.dirname(__file__), '../fixtures'))

def load_fixture(apps, schema_editor):
    
    def load_fixture_from_file(fixture_file):
        fixture = open(fixture_file, 'rb')
        objects = serializers.deserialize('json', fixture, ignorenonexistent=True)
        for obj in objects:
            obj.save()
        fixture.close()

    for fixture_filename in ("site_rmap.cc.json",):
        if fixture_filename[-5:] == ".json":
            
            fixture_file = os.path.join(fixture_dir, fixture_filename)
            print("load fixture from file: ",fixture_file)
            load_fixture_from_file(fixture_file)

    fixture_file=fixture_dir+"/sensor_type_01.json"
    print("load fixture from file: ",fixture_file)
    load_fixture_from_file(fixture_file)

    for fixture_filename in os.listdir(fixture_dir):
        if fixture_filename[:3] == "sta" and fixture_filename[-5:] == ".json":
            
            fixture_file = os.path.join(fixture_dir, fixture_filename)
            print("load fixture from file: ",fixture_file)
            load_fixture_from_file(fixture_file)

    fixture_filename = "sensor_type_02.json"
    fixture_file = os.path.join(fixture_dir, fixture_filename)
    print("load fixture from file: ",fixture_file)
    load_fixture_from_file(fixture_file)

    fixture_filename = "sensor_type_03.json"
    fixture_file = os.path.join(fixture_dir, fixture_filename)
    print("load fixture from file: ",fixture_file)
    load_fixture_from_file(fixture_file)

    fixture_filename = "sensor_type_04.json"
    fixture_file = os.path.join(fixture_dir, fixture_filename)
    print("load fixture from file: ",fixture_file)
    load_fixture_from_file(fixture_file)

    fixture_filename = "sensor_type_05.json"
    fixture_file = os.path.join(fixture_dir, fixture_filename)
    print("load fixture from file: ",fixture_file)
    load_fixture_from_file(fixture_file)

    fixture_filename = "sensor_type_06.json"
    fixture_file = os.path.join(fixture_dir, fixture_filename)
    print("load fixture from file: ",fixture_file)
    load_fixture_from_file(fixture_file)

    fixture_filename = "sensor_type_07.json"
    fixture_file = os.path.join(fixture_dir, fixture_filename)
    print("load fixture from file: ",fixture_file)
    load_fixture_from_file(fixture_file)

    fixture_filename = "sensor_type_08.json"
    fixture_file = os.path.join(fixture_dir, fixture_filename)
    print("load fixture from file: ",fixture_file)
    load_fixture_from_file(fixture_file)

    

def unload_fixture(apps, schema_editor):
    "Brutally deleting all entries for this model..."

    MyModel = apps.get_model("stations", "StationMetadata")
    MyModel.objects.all().delete()
    MyModel = apps.get_model("stations", "Board")
    MyModel.objects.all().delete()
    MyModel = apps.get_model("stations", "Sensor")
    MyModel.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('stations', '0011_auto_20230222_1203'),
    ]

    operations = [
        migrations.AddField(
            model_name='board',
            name='sn',
            field=models.PositiveIntegerField(blank=True, default=0, help_text='Serial number', null=True),
        ),
        migrations.AddField(
            model_name='board',
            name='type',
            field=models.PositiveIntegerField(choices=[(0, 'Module type stima not defined'), (10, 'Module send report over ethernet'), (11, 'Module send sample over gsm/gprs'), (20, 'Module acquire rain tips'), (21, 'Module acquire temperature and humidity'), (22, 'Module acquire temperature, humidity and rain'), (23, 'Module acquire air particle'), (24, 'Module acquire leaf wetness'), (25, 'Module acquire wind sensor'), (26, 'Module acquire radiation sensor'), (27, 'Module acquire gas (NO2, CO2)'), (28, 'Module acquire power regulator mppt')], default=0, help_text='Stima V4 standard type'),
        ),
        migrations.AlterField(
            model_name='board',
            name='category',
            field=models.CharField(blank=True, choices=[('base', 'Raspberry base'), ('master', 'Stima V3 master eth transport'), ('slave', 'Stima V3 slave'), ('satellite', 'Stima V3 slave radio transport'), ('gsm', 'Stima V3 master GSM/GPRS transport'), ('bluetooth', 'Stima V3 slave Bluetooth transport'), ('masterv4', 'Stima V4 master eth transport'), ('gsmv4', 'Stima V4 master LTS transport'), ('slavev4', 'Stima V4 slave CAN transport')], help_text='General standard category', max_length=50, null=True),
        ),
        migrations.RunPython(
            code=load_fixture,
            reverse_code=unload_fixture,
        ),        
    ]
