# Generated by Django 2.2.17 on 2023-02-27 10:28

from django.db import migrations, models
from django.core import serializers

import os
fixture_dir = os.path.abspath(os.path.join(os.path.dirname(__file__), '../fixtures'))

def load_fixture(apps, schema_editor):
    
    def load_fixture_from_file(fixture_file):
        fixture = open(fixture_file, 'rb')
        objects = serializers.deserialize('json', fixture, ignorenonexistent=True)
        for obj in objects:
            obj.save()
        fixture.close()

    for fixture_filename in ("site_rmap.cc.json",):
        if fixture_filename[-5:] == ".json":
            
            fixture_file = os.path.join(fixture_dir, fixture_filename)
            print("load fixture from file: ",fixture_file)
            load_fixture_from_file(fixture_file)

    fixture_file=fixture_dir+"/sensor_type_01.json"
    print("load fixture from file: ",fixture_file)
    load_fixture_from_file(fixture_file)

    for fixture_filename in os.listdir(fixture_dir):
        if fixture_filename[:3] == "sta" and fixture_filename[-5:] == ".json":
            
            fixture_file = os.path.join(fixture_dir, fixture_filename)
            print("load fixture from file: ",fixture_file)
            load_fixture_from_file(fixture_file)

    fixture_filename = "sensor_type_02.json"
    fixture_file = os.path.join(fixture_dir, fixture_filename)
    print("load fixture from file: ",fixture_file)
    load_fixture_from_file(fixture_file)

    fixture_filename = "sensor_type_03.json"
    fixture_file = os.path.join(fixture_dir, fixture_filename)
    print("load fixture from file: ",fixture_file)
    load_fixture_from_file(fixture_file)

    fixture_filename = "sensor_type_04.json"
    fixture_file = os.path.join(fixture_dir, fixture_filename)
    print("load fixture from file: ",fixture_file)
    load_fixture_from_file(fixture_file)

    fixture_filename = "sensor_type_05.json"
    fixture_file = os.path.join(fixture_dir, fixture_filename)
    print("load fixture from file: ",fixture_file)
    load_fixture_from_file(fixture_file)

    fixture_filename = "sensor_type_06.json"
    fixture_file = os.path.join(fixture_dir, fixture_filename)
    print("load fixture from file: ",fixture_file)
    load_fixture_from_file(fixture_file)

    fixture_filename = "sensor_type_07.json"
    fixture_file = os.path.join(fixture_dir, fixture_filename)
    print("load fixture from file: ",fixture_file)
    load_fixture_from_file(fixture_file)

    fixture_filename = "sensor_type_08.json"
    fixture_file = os.path.join(fixture_dir, fixture_filename)
    print("load fixture from file: ",fixture_file)
    load_fixture_from_file(fixture_file)

    

def unload_fixture(apps, schema_editor):
    "Brutally deleting all entries for this model..."

    MyModel = apps.get_model("stations", "StationMetadata")
    MyModel.objects.all().delete()
    MyModel = apps.get_model("stations", "Board")
    MyModel.objects.all().delete()
    MyModel = apps.get_model("stations", "Sensor")
    MyModel.objects.all().delete()

class Migration(migrations.Migration):

    dependencies = [
        ('stations', '0012_auto_20230222_1401'),
    ]

    operations = [
        migrations.AddField(
            model_name='transporttcpip',
            name='pppnumber',
            field=models.CharField(blank=True, default='*99#', help_text='number for LTE PPP access', max_length=30, null=True),
        ),
        migrations.AlterField(
            model_name='board',
            name='sn',
            field=models.PositiveIntegerField(blank=True, default=None, help_text='Serial number', null=True),
        ),
        migrations.AlterField(
            model_name='sensor',
            name='address',
            field=models.PositiveIntegerField(blank=True, default=None, help_text='I2C address (decimal)', null=True),
        ),
        migrations.RunPython(
            code=load_fixture,
            reverse_code=unload_fixture,
        ),                
    ]
